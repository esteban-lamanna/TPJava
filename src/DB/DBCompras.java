package DB;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.*;
import java.util.Date;  
import java.sql.*;

import Modelo.CarritoCompra;
import Modelo.Compra;
import Modelo.LineaProducto;
import Modelo.Producto;

public class DBCompras extends DBAdapter
{
	DBProductos proddb;
	DBLineascomp complidb;
	
	
	public Compra CreaCompra(Compra compra)
	{
		
		
		
		try {
			System.out.println("Entre aca ");
			PreparedStatement preparedStatement = conex.prepareStatement("insert into compras(total,dni,fecha,estado) values (?,?,?,?)",PreparedStatement.RETURN_GENERATED_KEYS);
            
            preparedStatement.setFloat(1, compra.getTotalcompra());
            preparedStatement.setInt(2, compra.getDni());
            preparedStatement.setTimestamp(3, new java.sql.Timestamp(new java.util.Date().getTime())); 
            preparedStatement.setString(4, compra.getEstado());
            
            preparedStatement.executeUpdate();
            
            ResultSet tableKeys = preparedStatement.getGeneratedKeys();
            tableKeys.next();
            
            
            int autoGeneratedID = tableKeys.getInt(1);
           
            compra.setCodcompra(autoGeneratedID);
            return compra;
			
		} catch (SQLException sqle) 
		{
			sqle.printStackTrace();
		}
		return compra;
	}
	
	
	
	public void GuardaCompra(Compra comp)
	{
		try
		{
			
		Statement st=conex.createStatement();
		st.execute("UPDATE compras SET total='"+comp.getTotalcompra()+"' where codcompra='"+comp.getCodcompra()+"'");
	
	} catch (SQLException t) 
		{
		
		t.printStackTrace();
	
		}
		
	}
	
	public ArrayList<Compra> getCompras()
	{
		ArrayList<Compra> compras=new ArrayList<Compra>();
		Compra comp;
		try
		{
		Statement st=conex.createStatement();
		ResultSet rs=st.executeQuery("SELECT * FROM Compras");
		
		while(rs.next())
		{
		comp=new Compra();
		comp.setCodcompra(rs.getInt("codcompra"));
		comp.setDni(rs.getInt("dni"));
		comp.setFecha(rs.getTimestamp("fecha"));
		comp.setTotalcompra(rs.getFloat("total"));
		comp.setEstado(rs.getString("estado"));
		compras.add(comp);
		}
		return compras;
	} catch (SQLException t) 
	{
		
	t.printStackTrace();
	return compras;
	}
	}
		
	
	public void GuardarEstadoCompra(ArrayList<Compra> comp)
	{
		try
		{
		for(Compra com : comp)
		{
			Statement st=conex.createStatement();
			st.execute("UPDATE compras SET estado='"+com.getEstado()+"' where codcompra='"+com.getCodcompra()+"'");
		}
	
	} catch (SQLException t) 
		{
		
		t.printStackTrace();
	
		}
		
	}
	
	
	/*public ArrayList<LineaProducto> buscaLineas(String codCarrito)
	{
		LineaProducto lp=null;
		ArrayList<LineaProducto> ProductosCarro=new ArrayList<LineaProducto>();
		Producto prod;
		try
		{
			proddb=new DBProductos();
		Statement st=conex.createStatement();
		ResultSet rs=st.executeQuery("SELECT * FROM lineaprod where codcarrito='"+codCarrito+"'");
		while(rs.next())
		{
		
			lp=new LineaProducto();
			lp.setCodC(rs.getInt("codcarrito"));
			lp.setCantidad(rs.getInt("cantidad"));
			lp.setSubtotlinea(rs.getFloat("subtotlinea"));
			prod=proddb.buscaProducto(rs.getString("nombre"), rs.getString("modelo"));
			lp.setProducto(prod);
			ProductosCarro.add(lp);
			
		}

		return ProductosCarro;
	} catch (SQLException t) 
	{
		
	t.printStackTrace();
	return ProductosCarro;
	}
		
		
	}*/
	
	public ArrayList<Compra> buscaCompras(int dni)
	{
		ArrayList<Compra> compras=new ArrayList<Compra>();
		ArrayList<LineaProducto> lpc;
		Compra comp;
		LineaProducto lp;
		Producto prod;
		try
		{
		Statement st=conex.createStatement();
		ResultSet rs=st.executeQuery("SELECT * FROM Compras where dni='"+dni+"')");
		
		while(rs.next())
		{
		comp=new Compra();
		comp.setCodcompra(rs.getInt("codcompra"));
		comp.setDni(rs.getInt("dni"));
		comp.setFecha(rs.getTimestamp("fecha"));
		comp.setTotalcompra(rs.getFloat("total"));
		comp.setEstado("estado");
		lpc=complidb.buscaLineas(rs.getString("codcompra"));
		for(int i = 0;i<lpc.size();i++)
		{
            comp.añadeLineaCompra(lpc.get(i));
		}
		
		compras.add(comp);
			
		}
		

		return compras;
	} catch (SQLException t) 
	{
		
	t.printStackTrace();
	return compras;
	}
		
		
	}
	
	
}